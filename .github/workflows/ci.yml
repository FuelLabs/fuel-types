name: CI

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  lint-toml-files:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Install Cargo.toml linter
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-toml-lint
          version: "0.1"
      - name: Run Cargo.toml linter
        run: git ls-files | grep Cargo.toml$ | xargs --verbose -n 1 cargo-toml-lint
      - name: Notify if Job Fails
        uses: ravsamhq/notify-slack-action@v1
        if: always() && github.ref == 'refs/heads/master'
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}> : <{run_url}|View Run Results>'
          footer: ''
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_NOTIFY_BUILD }}

  cargo-verifications:
    needs: cancel-previous-runs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - command: fmt
            args: --all --verbose -- --check
          - command: clippy
            args: --all-targets --all-features -- -D warnings -D clippy::dbg_macro
          - command: check
            args: --all-targets --all-features
          - command: check
            args: --verbose --target thumbv6m-none-eabi --no-default-features
          - command: check
            args: --verbose --target thumbv6m-none-eabi --no-default-features --features serde
          - command: check
            args: --verbose --target thumbv6m-none-eabi --no-default-features --features serde,alloc
          - command: test
            args: --all-targets --all-features
          - command: test
            args: --all-targets --no-default-features
          - command: test
            args: --all-targets --no-default-features --features serde
          - command: test
            args: --all-targets --no-default-features --features serde,alloc
          - command: test
            args: --all-targets --features serde
    steps:
      - run: echo "pass"